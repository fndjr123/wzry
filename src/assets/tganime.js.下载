!function(e){var t={};function n(l){if(t[l])return t[l].exports;var r=t[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(l,r,function(t){return e[t]}.bind(null,r));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function l(e,t){let n=document.querySelector(e),l=(n.offsetLeft,n.children),r=l.length;parseInt(n.clientWidth/r);if(t){let e=document.createElement("div");e.className="slider";let t=document.createElement("div");t.className="bar",t.style.width=1/r*100+"%";for(let e of l)e.style.width=1/r*100+"%";e.appendChild(t),n.appendChild(e)}return $bar}n.r(t);let r=(e,t)=>{var n=t||function(){},l=document.createElement("link");l.rel="stylesheet",l.href=e,l.onload=l.onreadystatechange=function(){n()},document.getElementsByTagName("head")[0].appendChild(l)},o=e=>{let t={url:e.url||"",params:{}||e.params,loadRemove:!0,loading:e.loading,callback:e.callback||function(){}};t.loading&&common.ajaxLoading("show");let n=document.createElement("script");n.async="async";for(let e in t.params)n[e]=t.params[e];n.src=t.url,n.onload=n.onreadystatechange=function(){this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||t.callback()},document.getElementsByTagName("head")[0].appendChild(n)};n.d(t,"TGAnime",function(){return s});var s={init:(e,t)=>{switch(e){case"tganime-tab-underline":l();break;case"tganime-slide-slidein":!function(e){let t=document.querySelector(e.tab),n=(t.offsetLeft,document.querySelectorAll(e.tabChild)||t.children);console.log(n);let r=n.length,o=e.autoplay||!1,s=e.loop||!1,a=0,i=0,c=0,d=0,u=!0;parseInt(t.clientWidth/r);for(var f=0;f<r;f++)!function(t){n[t].addEventListener("mouseover",l=>{i=-1*(a=t)*100/r;for(let e of n)e.classList.remove("on");n[a].classList.add("on"),h.style.transform="translate("+i+"%, 0)",e.slider&&(m.style.marginLeft=1/r*a*100+"%")}),n[t].addEventListener("touchstart",l=>{a=t,console.log(a),i=-1*a*100/r;for(let e of n)e.classList.remove("on");n[a].classList.add("on"),h.style.transform="translate("+i+"%, 0)",e.slider&&(m.style.marginLeft=1/r*a*100+"%")})}(f);let m=e.slider?l(e.tab,e.slider):null,h=document.querySelector(e.slide);t.children,h.style.width=100*r+"%";let p=h.children;for(let e of p)e.style.width=1/r*100+"%";h.addEventListener("touchstart",e=>{c=e.touches[0].clientX,d=e.touches[0].clientY},!1),h.addEventListener("touchmove",e=>{u&&Math.abs(c-e.touches[0].clientX)>Math.abs(d-e.touches[0].clientY)&&(u=!1,c-e.touches[0].clientX>0?y.slideToNext():y.slideToPrev())},!1),h.addEventListener("touchend",e=>{u=!0},!1),o&&setInterval(()=>{y.slideToNext()},o);var y={slideToNext:()=>{++a==r&&(a=s?0:r-1);for(let e of n)e.classList.remove("on");n[a].classList.add("on"),i=-1*a*100/r,n[a].classList.add("on"),h.style.transform="translate("+i+"%, 0)",e.slider&&(m.style.marginLeft=1/r*a*100+"%")},slideToPrev:()=>{--a<0&&(a=s?r-1:0);for(let e of n)e.classList.remove("on");n[a].classList.add("on"),i=-1*a*100/r,n[a].classList.add("on"),h.style.transform="translate("+i+"%, 0)",e.slider&&(m.style.marginLeft=1/r*a*100+"%")}}}(t);break;case"tganime-slide-book":!function(e){let t={loop:!0,speed:600,grabCursor:!0,watchSlidesProgress:!0,mousewheelControl:!0,keyboardControl:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},on:{progress:function(){let e=this;for(let t=0;t<e.slides.length;t++){let n=e.slides[t].progress*(.5*e.width);e.slides[t].querySelector(".tganime-slide-inner").style.transform="translate3d("+n+"px, 0, 0)"}},touchStart:function(){let e=this;for(let t=0;t<e.slides.length;t++)e.slides[t].style.transition=""},setTransition:function(e){let t=this;for(let n=0;n<t.slides.length;n++)t.slides[n].style.transition=e+"ms",t.slides[n].querySelector(".tganime-slide-inner").style.transition=e+"ms"}}};r("https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/css/swiper.min.css",function(){o({url:"https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/js/swiper.min.js",callback:function(){let n=Object.assign(t,e);new Swiper(e.container,n)}})})}(t);break;case"tganime-header-fix":!function(){let e,t=document.querySelector(".tganime-header-fix"),n=t.getBoundingClientRect().top,l=(t.clientHeight,[]),r={init:()=>{e=r.queryChild(t);for(let t of e)l.push(t.clientHeight)},scaleHeader:()=>{t.classList.add("fix")},resetChild:()=>{t.style.height="auto";let e=r.queryChild(t);for(let t of e)t.style.transition="tranform .3s ease-in-out",t.style.transformOrigin="top left",t.style.transform="translateY(0)"},queryChild:e=>{let t=e.children;return 1==t.length?r.queryChild(t[0]):t}};r.init(),0!=window.scrollY&&(n=window.scrollY+n,r.scaleHeader()),window.onscroll=function(){window.scrollY>=n?t.className.indexOf(" fix")<0&&r.scaleHeader():t.classList.remove("fix")}}();break;case"tganime-overlay-fadein":!function(e){let t=document.querySelector(e.overlay);document.querySelector(e.trigger),document.addEventListener("click",n=>{if(n.target.className.indexOf(e.overlay)<0&&t.className.indexOf("show")>-1){t.classList.remove("fadein");let e=setTimeout(()=>{t.classList.remove("show"),clearTimeout(e)},100)}else if(n.target.className.indexOf(e.trigger.replace(".",""))>-1&&t.className.indexOf("show")<0){t.classList.add("show");let e=setTimeout(()=>{t.classList.add("fadein"),clearTimeout(e)},100)}})}(t);break;case"tganime-totop":!function(e){let t;document.querySelector(e.container).addEventListener("click",e=>{e.stopPropagation(),n.scrollToTop()}),document.addEventListener("touchstart",e=>{clearInterval(t)}),document.addEventListener("mousewheel",e=>{clearInterval(t)});let n={scrollToTop:()=>{let e=!0,n=!1;0==n?t=setInterval(function(){let n=document.documentElement.scrollTop||document.body.scrollTop,l=Math.floor(-n/3);document.documentElement.scrollTop=document.body.scrollTop=n+l,e=!0,0==n&&clearInterval(t)},50):(clearInterval(t),n=!0)}}}(t);break;default:return}}};window.TGAnime=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,